@model urbanbooks.Models.Device_Advanced


@using (Html.BeginForm("DevicesAdvanced", "Search", FormMethod.Post, null)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Search Devices by :</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Category)
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ModelName)
                    @Html.ValidationMessageFor(model => model.ModelName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModelNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ModelNumber)
                    @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Manufacturer)
                    @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Query, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-5 form-inline">
                @Html.EditorFor(model => model.Query, new { htmlAttributes = new { @class = "form-control" } }) &nbsp;
                @Html.ValidationMessageFor(model => model.Query, "", new { @class = "text-danger" })
                <input type="submit" name="SearchQuery" value="Submit" class="btn btn-default add-on" />
            </div>
        </div>
        <br />
        <br />
        <br />
        <div class="well">
            <div class="container" style="padding-left:100px"><h4>Search Devices by Price Range</h4></div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.RangeFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RangeFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RangeFrom, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RangeTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RangeTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RangeTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="rangeDeviceSubmit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
