@using urbanbooks.Models
@using urbanbooks.Helpers
@model SearchViewModel
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    var message = TempData["cartAdd"] ?? string.Empty;
}

<script type="text/javascript">
    var msg;
    if(msg)
    {
        window.alert(msg);
    }
</script>

<div class="row" style="text-align:center">
    <h4>Search Results for :&nbsp;<strong>@Html.DisplayFor(m => m.Query)</strong></h4>
</div>
<br />

@if (Model.BookResults != null)
{
    string returnUrl = "Edit";
    <hr />
    <h4>Books</h4>
    <div class="row">
        @foreach (var item in Model.BookResults)
        {
            <div class="col-md-2">
                <div style="height:450px">
                    <div class="thumbnail" style="text-align:center">
                        <img class="img-thumbnail" src="~/Uploads/Books/@item.CoverImage" width="150" height="150" />
                        <label class="caption">@Html.DisplayFor(modelItem => item.BookTitle)</label>
                        <label>ISBN :</label>&nbsp;@Html.DisplayFor(modelItem => item.ISBN)<br />
                        <label>Price :</label>&nbsp;@Html.DisplayFor(modelItem => item.SellingPrice)
                        <hr />
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-heart-empty'></span>", "Add to Wishlist", "Add", "Wishlist", new { productId = item.ProductID, returnUrl }, htmlAttributes: new { @class = "btn" })
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-eye-open'></span>", "View", "CustomerDetails", "Book", new { productId = item.ProductID }, htmlAttributes: new { @class = "btn" })
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-shopping-cart'></span>", "Add to Cart", "AddToCart", "Cart", new { productId = item.ProductID, returnUrl }, htmlAttributes: new { @class = "btn" })
                    </div>
                </div>
            </div>
        }
    </div>
}
@if (Model.BookCategoryResults != null)
{
    <hr />
    <h4>Book Categories</h4>
    <div class="row">
        <ul>
            @foreach (var item in Model.BookCategoryResults)
            {
                <li>
                    @Html.ActionLink("" + item.CategoryName, "ByCategory", "Book", new { CategoryID = item.BookCategoryID }, null)
                </li>
            }
        </ul>
    </div>

}
@if (Model.GadgetResults != null)
{
    string returnUrl = "Edit";
    <hr />
    <h4>Devices</h4>
    <div class="row">
        @foreach (var item in Model.GadgetResults)
        {
            <div class="col-md-2">
                <div style="height:450px">
                    <div class="thumbnail" style="text-align:center">
                        <img class="img-thumbnail" src="~/Uploads/Tech/ImageFront/@item.ImageFront" width="100" height="100" />
                        <h4 class="caption">@Html.DisplayFor(modelItem => item.ModelName)</h4>
                        <label>Model Number :</label>&nbsp;@Html.DisplayFor(modelItem => item.ModelNumber)<br />
                        <label>Price :</label>&nbsp;@Html.DisplayFor(modelItem => item.SellingPrice)
                        <hr />
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-heart-empty'></span>", "Add to Wishlist", "Add", "Wishlist", new { productId = item.ProductID, returnUrl }, htmlAttributes: new { @class = "btn" })
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-eye-open'></span>", "View", "Details", "Technology", new { ProductID = item.ProductID }, htmlAttributes: new { @class = "btn" })
                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-shopping-cart'></span>", "Add to Cart", "AddToCart", "Cart", new { productId = item.ProductID, returnUrl }, htmlAttributes: new { @class = "btn" })
                    </div>
                </div>
            </div>
        }
    </div>
}
@if (Model.GadgetCategoryResults != null)
{
    <hr />
    <h4>Device Category</h4>
    <div class="row">
        <ul>
            @foreach (var item in Model.GadgetCategoryResults)
            {
                <li>@Html.ActionLink("" + item.CategoryName, "ByCategory", "Technology", new { CategoryID = item.TechCategoryID}, null)</li>
            }
        </ul>
    </div>

}
@if (Model.AuthorResults != null)
{
    <hr />
    <h4>Authors</h4>
    <div class="row">
        <ul>
            @foreach (var item in Model.AuthorResults)
            {
                <li>@Html.ActionLink("" + item.Name + " " + item.Surname, "Books", "Author", new { AuthorID = item.AuthorID}, null)</li>
            }
        </ul>

    </div>
}
@if(Model.ManufacturerResults != null)
{
    <hr />
    <h4>Device Manufacturers</h4>
    <div class="row">
        <ul>
            @foreach (var item in Model.ManufacturerResults)
            {
                <li>@Html.ActionLink("" + item.Name, "ByManufacturer", "Technology", new { ManufacturerID = item.ManufacturerID}, null)</li>
            }
        </ul>
    </div>
}
@if(Model.PublisherResults != null)
{
    <hr />
    <h4>Publishers</h4>
    <div class="row">
        <ul>
            @foreach (var item in Model.PublisherResults)
            {
                <li>@Html.ActionLink("" + item.Name, "Books", "Publisher", new { PublisherID = item.PublisherID}, null)</li>
            }
        </ul>
    </div>
}
@if(Model == null)
{
    <div class="row">
        <p>Sorry ! No results matching your query where found :(</p>
    </div>
}

<br />
<p>Please consider trying our @Html.ActionLink("Advanced Search", "Advanced", "Search") </p>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/bootstrap")

    @Scripts.Render("~/bundles/modalform")

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/fuelux")
}