@using urbanbooks.Models;
@using System.Web.Mvc
@model AddNewBookViewModel

<script src="~/Scripts/jquery-2.1.1.min.js" type="text/javascript"></script>
<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="~/Scripts/bootstrap-multiselect.js" type="text/javascript"></script>

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{
    var message = TempData["AlertMessage"] ?? string.Empty;
}

<script type="text/javascript">
    var message = '@message';
    if (message)
        alert(message);
</script>
<br />
<div class="row">
    <div class="col-md-9">
        <h2>Create Book</h2>
    </div>

    <div class="col-md-3">
        <br />
        <div class="navbar-form input-group form-inline pull-right">
            @using (@Html.BeginForm("AdminBookSearch", "Search", FormMethod.Post, null))
            {
                @*@Html.TextBox("txt", null, new { htmlAttributes = new { @class = "form-control input-sm input-group-addon", placeholder = "Search" } })*@
                <div class="btn-group">
                    <input type="text" name="query" placeholder="Search" value="" class="form-control input-sm" />
                    <button type="submit" class="btn btn-default input-group-addon" data-close-others="true">
                        <span class="glyphicon glyphicon-search "></span>
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<div id="myModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContent">
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm("Create", "Book", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.books.BookTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.books.BookTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.books.BookTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.books.Synopsis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.books.Synopsis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.books.Synopsis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.books.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.books.ISBN, new { htmlAttributes = new { @class = "form-control", id = "isbn", @placeholder = "10 or 13 Digit ISBN", data_toggle = "popover", title = "What is this ISBN?", data_content = "10 or 13 Digit Code found on the back of a book. Head over to our FAQs for more info " } })
                @Html.ValidationMessageFor(model => model.books.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.books.CostPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.books.CostPrice, new { htmlAttributes = new { @class = "form-control new" } })
                @Html.ValidationMessageFor(model => model.books.CostPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.books.SellingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.books.SellingPrice, new { htmlAttributes = new { @class = "form-control olden", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.books.SellingPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Category</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("CategoryName", Model.bookCategories, new { @class = "form-control" })
                    @Html.ActionLink("Add a Category", "Create", "BookType")
                </div>
            </div>
        </div>




        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Publisher</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("PublisherName", Model.publishers, new { @class = "form-control" })
                    @Html.ActionLink("Add a Publisher", "Create", "Publisher")
                </div>
            </div>
        </div>


        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Supplier</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("Name", Model.suppliers, new { @class = "form-control" })<br />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Author</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("FullName", Model.authors, new { @class = "form-control multiselect", multiple = "multiple" })
                    @Html.ActionLink("Add an Author", "ViewAuthor", "Author", null, new { data_modal = ""})
                </div>
            </div>
        </div>
        <script type="text/javascript">
            $('.multiselect').multiselect({ enableFiltering: true });
        </script>
        <fieldset>
            <legend>Image</legend>
            <div class="editor-label">
                @Html.LabelFor(model => model.books.CoverImage)
            </div>
            <div class="editor-field">
                <input id="CoverImage" title="Upload Book Cover" type="file" name="file" accept="image/*" />
            </div>
        </fieldset>
        <script type="text/javascript">
            $(".new").change(function () {
                var selectedValue = $(this).val();
                if (selectedValue != " ") {
                    $.ajax({
                        url: '@Url.Action("GetBookMarkUp", "Book")',
                        type: 'post',
                        data: { 'selectedValue': selectedValue },
                        datatype: 'json',
                        success: function (response) { $(".olden").val(response); }
                    })
                }
                else {
                    $(".olden").val(" ");
                }
            });
            $('#isbn').focus($('#isbn').popover());
        </script>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


}



<div id="myModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContent">

            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "AdminIndex")
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryui")
@Styles.Render("~/Content/css")
@Styles.Render("~/Content/themes/base/css")
@Scripts.Render("~/bundles/bootstrap")

<script type="text/javascript" src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
@Scripts.Render("~/bundles/modalform")

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/fuelux")
