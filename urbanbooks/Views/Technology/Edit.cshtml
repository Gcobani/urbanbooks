@using urbanbooks.Models
@using urbanbooks.Helpers
@model AddNewTechViewModel

<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/chosen.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.multiple.select.js"></script>
<link href="~/Content/multiple-select.css" rel="stylesheet" />

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Technology</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.techs.ProductID)
        @Html.HiddenFor(model => model.techs.TechID)
        <div class="form-group">
            @Html.LabelFor(model => model.techs.ModelName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.ModelName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.Specs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.Specs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.Specs, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.ModelNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.ModelNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.CostPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.CostPrice, new { htmlAttributes = new { @class = "form-control new" } })
                @Html.ValidationMessageFor(model => model.techs.CostPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.SellingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.SellingPrice, new { htmlAttributes = new { @class = "form-control olden", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.techs.SellingPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md=10">
                @Html.CheckBoxFor(model => model.techs.Status, new { htmlattributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <script type="text/javascript">
            $(".new").change(function () {
                var selectedValue = $(this).val();
                if (selectedValue != " ") {
                    $.ajax({
                        url: '@Url.Action("GetTechMarkUp", "Technology")',
                        type: 'post',
                        data: { 'selectedValue': selectedValue },
                        datatype: 'json',
                        success: function (response) { $(".olden").val(response); }
                    })
                }
                else {
                    $(".olden").val(" ");
                }
            });
        </script>
        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Manufacturer</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("Manufacturer", Model.manufacturers, new { @class = "form-control" })<br />
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Category</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("CategoryName", Model.techCategories, new { @class = "form-control" })<br />
                </div>
            </div>
        </div>
        <div class="form-group">
            <div>
                <label class="control-label col-md-2">Supplier</label>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("Name", Model.suppliers, new { @class = "form-control" })<br />
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AdminIndex", "Technology")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modalform")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/themes/base/css")
    @Scripts.Render("~/bundles/bootstrap")

    @Scripts.Render("~/bundles/modalform")

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/fuelux")
}
