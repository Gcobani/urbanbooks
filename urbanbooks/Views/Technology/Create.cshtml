@using urbanbooks.Models;
@model AddNewTechViewModel


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Technology</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.techs.ModelName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.ModelName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.ModelName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.Specs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.Specs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.Specs, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.ModelNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.ModelNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.ModelNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.CostPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.CostPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.CostPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.techs.SellingPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.techs.SellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.techs.SellingPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                <h5>Category</h5>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("Manufacturer", Model.manufacturers)
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                <h5>Category</h5>
                <div class="col-md-10 dropdown">
                    @Html.DropDownList("TechCategoryID", Model.techCategories)
                </div>
            </div>
        </div>

        <label for="file">Upload Front Image:</label>
        <input type="file" name="file" id="file" />

        <label for="file2">Upload Top Image:</label>
        <input type="file" name="file2" id="file2" />

        <label for="file3">Upload Side Image:</label>
        <input type="file" name="file3" id="file3" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
